package com.lhdz.dataUtil.protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.pro

public final class EnumPro {
  private EnumPro() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code e_MsgOper_PRO}
   *
   * <pre>
   *操作类型
   * </pre>
   */
  public enum e_MsgOper_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_ADD_PRO = 0;</code>
     */
    E_ADD_PRO(0, 0),
    /**
     * <code>E_DEL_PRO = 1;</code>
     */
    E_DEL_PRO(1, 1),
    /**
     * <code>E_MOD_PRO = 2;</code>
     */
    E_MOD_PRO(2, 2),
    ;

    /**
     * <code>E_ADD_PRO = 0;</code>
     */
    public static final int E_ADD_PRO_VALUE = 0;
    /**
     * <code>E_DEL_PRO = 1;</code>
     */
    public static final int E_DEL_PRO_VALUE = 1;
    /**
     * <code>E_MOD_PRO = 2;</code>
     */
    public static final int E_MOD_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_MsgOper_PRO valueOf(int value) {
      switch (value) {
        case 0: return E_ADD_PRO;
        case 1: return E_DEL_PRO;
        case 2: return E_MOD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_MsgOper_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_MsgOper_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_MsgOper_PRO>() {
            public e_MsgOper_PRO findValueByNumber(int number) {
              return e_MsgOper_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(0);
    }

    private static final e_MsgOper_PRO[] VALUES = values();

    public static e_MsgOper_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_MsgOper_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_MsgOper_PRO)
  }

  /**
   * Protobuf enum {@code e_RoomRoles_PRO}
   *
   * <pre>
   *用户角色
   * </pre>
   */
  public enum e_RoomRoles_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_HOST_PRO = 0;</code>
     *
     * <pre>
     *群主
     * </pre>
     */
    E_HOST_PRO(0, 0),
    /**
     * <code>E_MANGER_PRO = 1;</code>
     *
     * <pre>
     *管理员
     * </pre>
     */
    E_MANGER_PRO(1, 1),
    /**
     * <code>E_NORMAL_PRO = 2;</code>
     *
     * <pre>
     *普通成员
     * </pre>
     */
    E_NORMAL_PRO(2, 2),
    ;

    /**
     * <code>E_HOST_PRO = 0;</code>
     *
     * <pre>
     *群主
     * </pre>
     */
    public static final int E_HOST_PRO_VALUE = 0;
    /**
     * <code>E_MANGER_PRO = 1;</code>
     *
     * <pre>
     *管理员
     * </pre>
     */
    public static final int E_MANGER_PRO_VALUE = 1;
    /**
     * <code>E_NORMAL_PRO = 2;</code>
     *
     * <pre>
     *普通成员
     * </pre>
     */
    public static final int E_NORMAL_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_RoomRoles_PRO valueOf(int value) {
      switch (value) {
        case 0: return E_HOST_PRO;
        case 1: return E_MANGER_PRO;
        case 2: return E_NORMAL_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_RoomRoles_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_RoomRoles_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_RoomRoles_PRO>() {
            public e_RoomRoles_PRO findValueByNumber(int number) {
              return e_RoomRoles_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(1);
    }

    private static final e_RoomRoles_PRO[] VALUES = values();

    public static e_RoomRoles_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_RoomRoles_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_RoomRoles_PRO)
  }

  /**
   * Protobuf enum {@code e_NetType_PRO}
   *
   * <pre>
   *网络类型
   * </pre>
   */
  public enum e_NetType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_NETTCP_PRO = 0;</code>
     */
    E_NETTCP_PRO(0, 0),
    /**
     * <code>E_NETUDP_PRO = 1;</code>
     */
    E_NETUDP_PRO(1, 1),
    ;

    /**
     * <code>E_NETTCP_PRO = 0;</code>
     */
    public static final int E_NETTCP_PRO_VALUE = 0;
    /**
     * <code>E_NETUDP_PRO = 1;</code>
     */
    public static final int E_NETUDP_PRO_VALUE = 1;


    public final int getNumber() { return value; }

    public static e_NetType_PRO valueOf(int value) {
      switch (value) {
        case 0: return E_NETTCP_PRO;
        case 1: return E_NETUDP_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_NetType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_NetType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_NetType_PRO>() {
            public e_NetType_PRO findValueByNumber(int number) {
              return e_NetType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(2);
    }

    private static final e_NetType_PRO[] VALUES = values();

    public static e_NetType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_NetType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_NetType_PRO)
  }

  /**
   * Protobuf enum {@code en_sysStatus_PRO}
   *
   * <pre>
   *系统当前状态等级 
   * </pre>
   */
  public enum en_sysStatus_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SYSTEM_STATUS_IDLE_PRO = 0;</code>
     */
    SYSTEM_STATUS_IDLE_PRO(0, 0),
    /**
     * <code>SYSTEM_STATUS_NORMAL_PRO = 1;</code>
     */
    SYSTEM_STATUS_NORMAL_PRO(1, 1),
    /**
     * <code>SYSTEM_STATUS_BUSY_PRO = 2;</code>
     */
    SYSTEM_STATUS_BUSY_PRO(2, 2),
    /**
     * <code>SYSTEM_STATUS_DIE_PRO = 3;</code>
     */
    SYSTEM_STATUS_DIE_PRO(3, 3),
    ;

    /**
     * <code>SYSTEM_STATUS_IDLE_PRO = 0;</code>
     */
    public static final int SYSTEM_STATUS_IDLE_PRO_VALUE = 0;
    /**
     * <code>SYSTEM_STATUS_NORMAL_PRO = 1;</code>
     */
    public static final int SYSTEM_STATUS_NORMAL_PRO_VALUE = 1;
    /**
     * <code>SYSTEM_STATUS_BUSY_PRO = 2;</code>
     */
    public static final int SYSTEM_STATUS_BUSY_PRO_VALUE = 2;
    /**
     * <code>SYSTEM_STATUS_DIE_PRO = 3;</code>
     */
    public static final int SYSTEM_STATUS_DIE_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static en_sysStatus_PRO valueOf(int value) {
      switch (value) {
        case 0: return SYSTEM_STATUS_IDLE_PRO;
        case 1: return SYSTEM_STATUS_NORMAL_PRO;
        case 2: return SYSTEM_STATUS_BUSY_PRO;
        case 3: return SYSTEM_STATUS_DIE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<en_sysStatus_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<en_sysStatus_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<en_sysStatus_PRO>() {
            public en_sysStatus_PRO findValueByNumber(int number) {
              return en_sysStatus_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(3);
    }

    private static final en_sysStatus_PRO[] VALUES = values();

    public static en_sysStatus_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private en_sysStatus_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:en_sysStatus_PRO)
  }

  /**
   * Protobuf enum {@code eCLIENTTYPE_PRO}
   *
   * <pre>
   *客户端类型
   * </pre>
   */
  public enum eCLIENTTYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>en_CLIENT_PC_PRO = 0;</code>
     */
    en_CLIENT_PC_PRO(0, 0),
    /**
     * <code>en_CLIENT_WEB_PRO = 1;</code>
     */
    en_CLIENT_WEB_PRO(1, 1),
    /**
     * <code>en_CLIENT_IPHONE_PRO = 2;</code>
     */
    en_CLIENT_IPHONE_PRO(2, 2),
    /**
     * <code>en_CLIENT_PAD_PRO = 3;</code>
     */
    en_CLIENT_PAD_PRO(3, 3),
    ;

    /**
     * <code>en_CLIENT_PC_PRO = 0;</code>
     */
    public static final int en_CLIENT_PC_PRO_VALUE = 0;
    /**
     * <code>en_CLIENT_WEB_PRO = 1;</code>
     */
    public static final int en_CLIENT_WEB_PRO_VALUE = 1;
    /**
     * <code>en_CLIENT_IPHONE_PRO = 2;</code>
     */
    public static final int en_CLIENT_IPHONE_PRO_VALUE = 2;
    /**
     * <code>en_CLIENT_PAD_PRO = 3;</code>
     */
    public static final int en_CLIENT_PAD_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eCLIENTTYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return en_CLIENT_PC_PRO;
        case 1: return en_CLIENT_WEB_PRO;
        case 2: return en_CLIENT_IPHONE_PRO;
        case 3: return en_CLIENT_PAD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eCLIENTTYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eCLIENTTYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eCLIENTTYPE_PRO>() {
            public eCLIENTTYPE_PRO findValueByNumber(int number) {
              return eCLIENTTYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(4);
    }

    private static final eCLIENTTYPE_PRO[] VALUES = values();

    public static eCLIENTTYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eCLIENTTYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eCLIENTTYPE_PRO)
  }

  /**
   * Protobuf enum {@code eACCOUNTTYPE_PRO}
   *
   * <pre>
   *账号类型
   * </pre>
   */
  public enum eACCOUNTTYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>en_ACCOUNT_USERID_PRO = 0;</code>
     */
    en_ACCOUNT_USERID_PRO(0, 0),
    /**
     * <code>en_ACCOUNT_EMAIL_PRO = 1;</code>
     */
    en_ACCOUNT_EMAIL_PRO(1, 1),
    /**
     * <code>en_ACCOUNT_PHONE_PRO = 2;</code>
     */
    en_ACCOUNT_PHONE_PRO(2, 2),
    ;

    /**
     * <code>en_ACCOUNT_USERID_PRO = 0;</code>
     */
    public static final int en_ACCOUNT_USERID_PRO_VALUE = 0;
    /**
     * <code>en_ACCOUNT_EMAIL_PRO = 1;</code>
     */
    public static final int en_ACCOUNT_EMAIL_PRO_VALUE = 1;
    /**
     * <code>en_ACCOUNT_PHONE_PRO = 2;</code>
     */
    public static final int en_ACCOUNT_PHONE_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eACCOUNTTYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return en_ACCOUNT_USERID_PRO;
        case 1: return en_ACCOUNT_EMAIL_PRO;
        case 2: return en_ACCOUNT_PHONE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eACCOUNTTYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eACCOUNTTYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eACCOUNTTYPE_PRO>() {
            public eACCOUNTTYPE_PRO findValueByNumber(int number) {
              return eACCOUNTTYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(5);
    }

    private static final eACCOUNTTYPE_PRO[] VALUES = values();

    public static eACCOUNTTYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eACCOUNTTYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eACCOUNTTYPE_PRO)
  }

  /**
   * Protobuf enum {@code eONLINESTATUS_PRO}
   *
   * <pre>
   *在线状态
   * </pre>
   */
  public enum eONLINESTATUS_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>en_STATUS_ONLINE_PRO = 0;</code>
     */
    en_STATUS_ONLINE_PRO(0, 0),
    /**
     * <code>en_STATUS_HIDE_PRO = 1;</code>
     */
    en_STATUS_HIDE_PRO(1, 1),
    /**
     * <code>en_STATUS_OFFLINE_PRO = 2;</code>
     */
    en_STATUS_OFFLINE_PRO(2, 2),
    /**
     * <code>en_STATUS_BUSY_PRO = 3;</code>
     */
    en_STATUS_BUSY_PRO(3, 3),
    ;

    /**
     * <code>en_STATUS_ONLINE_PRO = 0;</code>
     */
    public static final int en_STATUS_ONLINE_PRO_VALUE = 0;
    /**
     * <code>en_STATUS_HIDE_PRO = 1;</code>
     */
    public static final int en_STATUS_HIDE_PRO_VALUE = 1;
    /**
     * <code>en_STATUS_OFFLINE_PRO = 2;</code>
     */
    public static final int en_STATUS_OFFLINE_PRO_VALUE = 2;
    /**
     * <code>en_STATUS_BUSY_PRO = 3;</code>
     */
    public static final int en_STATUS_BUSY_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eONLINESTATUS_PRO valueOf(int value) {
      switch (value) {
        case 0: return en_STATUS_ONLINE_PRO;
        case 1: return en_STATUS_HIDE_PRO;
        case 2: return en_STATUS_OFFLINE_PRO;
        case 3: return en_STATUS_BUSY_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eONLINESTATUS_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eONLINESTATUS_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eONLINESTATUS_PRO>() {
            public eONLINESTATUS_PRO findValueByNumber(int number) {
              return eONLINESTATUS_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(6);
    }

    private static final eONLINESTATUS_PRO[] VALUES = values();

    public static eONLINESTATUS_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eONLINESTATUS_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eONLINESTATUS_PRO)
  }

  /**
   * Protobuf enum {@code ePLOICIE_PRO}
   *
   * <pre>
   *验证策略
   * </pre>
   */
  public enum ePLOICIE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>en_PLOICIE_NO_PRO = 0;</code>
     *
     * <pre>
     *无验证策略，允许任何人加我为好友;
     * </pre>
     */
    en_PLOICIE_NO_PRO(0, 0),
    /**
     * <code>en_PLOICIE_ANSWER_PRO = 1;</code>
     *
     * <pre>
     *回答问题;
     * </pre>
     */
    en_PLOICIE_ANSWER_PRO(1, 1),
    /**
     * <code>en_PLOICIE_CHECK_PRO = 2;</code>
     *
     * <pre>
     *对端验证
     * </pre>
     */
    en_PLOICIE_CHECK_PRO(2, 2),
    /**
     * <code>en_PLOICIE_OTHER_PRO = 3;</code>
     *
     * <pre>
     *其他;
     * </pre>
     */
    en_PLOICIE_OTHER_PRO(3, 3),
    ;

    /**
     * <code>en_PLOICIE_NO_PRO = 0;</code>
     *
     * <pre>
     *无验证策略，允许任何人加我为好友;
     * </pre>
     */
    public static final int en_PLOICIE_NO_PRO_VALUE = 0;
    /**
     * <code>en_PLOICIE_ANSWER_PRO = 1;</code>
     *
     * <pre>
     *回答问题;
     * </pre>
     */
    public static final int en_PLOICIE_ANSWER_PRO_VALUE = 1;
    /**
     * <code>en_PLOICIE_CHECK_PRO = 2;</code>
     *
     * <pre>
     *对端验证
     * </pre>
     */
    public static final int en_PLOICIE_CHECK_PRO_VALUE = 2;
    /**
     * <code>en_PLOICIE_OTHER_PRO = 3;</code>
     *
     * <pre>
     *其他;
     * </pre>
     */
    public static final int en_PLOICIE_OTHER_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static ePLOICIE_PRO valueOf(int value) {
      switch (value) {
        case 0: return en_PLOICIE_NO_PRO;
        case 1: return en_PLOICIE_ANSWER_PRO;
        case 2: return en_PLOICIE_CHECK_PRO;
        case 3: return en_PLOICIE_OTHER_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>() {
            public ePLOICIE_PRO findValueByNumber(int number) {
              return ePLOICIE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(7);
    }

    private static final ePLOICIE_PRO[] VALUES = values();

    public static ePLOICIE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ePLOICIE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ePLOICIE_PRO)
  }

  /**
   * Protobuf enum {@code e_ROOMTYPE_PRO}
   *
   * <pre>
   *房间类型
   * </pre>
   */
  public enum e_ROOMTYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_TYPE_TICKET_PRO = 0;</code>
     *
     * <pre>
     *彩票
     * </pre>
     */
    EN_TYPE_TICKET_PRO(0, 0),
    /**
     * <code>EN_TYPE_FRIENDS_PRO = 1;</code>
     *
     * <pre>
     *同事朋友
     * </pre>
     */
    EN_TYPE_FRIENDS_PRO(1, 1),
    /**
     * <code>EN_TYPE_GAME_PRO = 2;</code>
     *
     * <pre>
     *游戏
     * </pre>
     */
    EN_TYPE_GAME_PRO(2, 2),
    /**
     * <code>EN_TYPE_LICKLOVE_PRO = 3;</code>
     *
     * <pre>
     *兴趣爱好
     * </pre>
     */
    EN_TYPE_LICKLOVE_PRO(3, 3),
    ;

    /**
     * <code>EN_TYPE_TICKET_PRO = 0;</code>
     *
     * <pre>
     *彩票
     * </pre>
     */
    public static final int EN_TYPE_TICKET_PRO_VALUE = 0;
    /**
     * <code>EN_TYPE_FRIENDS_PRO = 1;</code>
     *
     * <pre>
     *同事朋友
     * </pre>
     */
    public static final int EN_TYPE_FRIENDS_PRO_VALUE = 1;
    /**
     * <code>EN_TYPE_GAME_PRO = 2;</code>
     *
     * <pre>
     *游戏
     * </pre>
     */
    public static final int EN_TYPE_GAME_PRO_VALUE = 2;
    /**
     * <code>EN_TYPE_LICKLOVE_PRO = 3;</code>
     *
     * <pre>
     *兴趣爱好
     * </pre>
     */
    public static final int EN_TYPE_LICKLOVE_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static e_ROOMTYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_TYPE_TICKET_PRO;
        case 1: return EN_TYPE_FRIENDS_PRO;
        case 2: return EN_TYPE_GAME_PRO;
        case 3: return EN_TYPE_LICKLOVE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_ROOMTYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_ROOMTYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_ROOMTYPE_PRO>() {
            public e_ROOMTYPE_PRO findValueByNumber(int number) {
              return e_ROOMTYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(8);
    }

    private static final e_ROOMTYPE_PRO[] VALUES = values();

    public static e_ROOMTYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_ROOMTYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_ROOMTYPE_PRO)
  }

  /**
   * Protobuf enum {@code eUSERSEX_PRO}
   *
   * <pre>
   *性别
   * </pre>
   */
  public enum eUSERSEX_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_USER_MEN_PRO = 0;</code>
     *
     * <pre>
     *男
     * </pre>
     */
    EN_USER_MEN_PRO(0, 0),
    /**
     * <code>EN_USER_WOMEN_PRO = 1;</code>
     *
     * <pre>
     *女
     * </pre>
     */
    EN_USER_WOMEN_PRO(1, 1),
    /**
     * <code>EN_USER_MID_PRO = 2;</code>
     *
     * <pre>
     *中性人;
     * </pre>
     */
    EN_USER_MID_PRO(2, 2),
    ;

    /**
     * <code>EN_USER_MEN_PRO = 0;</code>
     *
     * <pre>
     *男
     * </pre>
     */
    public static final int EN_USER_MEN_PRO_VALUE = 0;
    /**
     * <code>EN_USER_WOMEN_PRO = 1;</code>
     *
     * <pre>
     *女
     * </pre>
     */
    public static final int EN_USER_WOMEN_PRO_VALUE = 1;
    /**
     * <code>EN_USER_MID_PRO = 2;</code>
     *
     * <pre>
     *中性人;
     * </pre>
     */
    public static final int EN_USER_MID_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eUSERSEX_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_USER_MEN_PRO;
        case 1: return EN_USER_WOMEN_PRO;
        case 2: return EN_USER_MID_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eUSERSEX_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eUSERSEX_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eUSERSEX_PRO>() {
            public eUSERSEX_PRO findValueByNumber(int number) {
              return eUSERSEX_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(9);
    }

    private static final eUSERSEX_PRO[] VALUES = values();

    public static eUSERSEX_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eUSERSEX_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eUSERSEX_PRO)
  }

  /**
   * Protobuf enum {@code e_ROOMRECVTYPE_PRO}
   *
   * <pre>
   *群消息接收模式设置
   * </pre>
   */
  public enum e_ROOMRECVTYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_RECV_NURMAL_PRO = 0;</code>
     *
     * <pre>
     *接收并提示消息
     * </pre>
     */
    EN_RECV_NURMAL_PRO(0, 0),
    /**
     * <code>EN_RECV_ONLYCOUNT_PRO = 1;</code>
     *
     * <pre>
     *仅显示条数
     * </pre>
     */
    EN_RECV_ONLYCOUNT_PRO(1, 1),
    /**
     * <code>EN_RECV_ONLYOPENROOM_PRO = 2;</code>
     *
     * <pre>
     *自动弹出消息
     * </pre>
     */
    EN_RECV_ONLYOPENROOM_PRO(2, 2),
    /**
     * <code>EN_RECV_REJUEST_PRO = 3;</code>
     *
     * <pre>
     *屏蔽群消息提示
     * </pre>
     */
    EN_RECV_REJUEST_PRO(3, 3),
    ;

    /**
     * <code>EN_RECV_NURMAL_PRO = 0;</code>
     *
     * <pre>
     *接收并提示消息
     * </pre>
     */
    public static final int EN_RECV_NURMAL_PRO_VALUE = 0;
    /**
     * <code>EN_RECV_ONLYCOUNT_PRO = 1;</code>
     *
     * <pre>
     *仅显示条数
     * </pre>
     */
    public static final int EN_RECV_ONLYCOUNT_PRO_VALUE = 1;
    /**
     * <code>EN_RECV_ONLYOPENROOM_PRO = 2;</code>
     *
     * <pre>
     *自动弹出消息
     * </pre>
     */
    public static final int EN_RECV_ONLYOPENROOM_PRO_VALUE = 2;
    /**
     * <code>EN_RECV_REJUEST_PRO = 3;</code>
     *
     * <pre>
     *屏蔽群消息提示
     * </pre>
     */
    public static final int EN_RECV_REJUEST_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static e_ROOMRECVTYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_RECV_NURMAL_PRO;
        case 1: return EN_RECV_ONLYCOUNT_PRO;
        case 2: return EN_RECV_ONLYOPENROOM_PRO;
        case 3: return EN_RECV_REJUEST_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_ROOMRECVTYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_ROOMRECVTYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_ROOMRECVTYPE_PRO>() {
            public e_ROOMRECVTYPE_PRO findValueByNumber(int number) {
              return e_ROOMRECVTYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(10);
    }

    private static final e_ROOMRECVTYPE_PRO[] VALUES = values();

    public static e_ROOMRECVTYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_ROOMRECVTYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_ROOMRECVTYPE_PRO)
  }

  /**
   * Protobuf enum {@code e_RoomQueyrCond_PRO}
   *
   * <pre>
   *群信息查询条件设置
   * </pre>
   */
  public enum e_RoomQueyrCond_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_COND_BYUSERID_PRO = 0;</code>
     */
    EN_COND_BYUSERID_PRO(0, 0),
    /**
     * <code>EN_COND_BYIP_PRO = 1;</code>
     */
    EN_COND_BYIP_PRO(1, 1),
    /**
     * <code>EN_COND_BYKEY_PRO = 2;</code>
     */
    EN_COND_BYKEY_PRO(2, 2),
    /**
     * <code>EN_COND_BYROOMID_PRO = 3;</code>
     */
    EN_COND_BYROOMID_PRO(3, 3),
    ;

    /**
     * <code>EN_COND_BYUSERID_PRO = 0;</code>
     */
    public static final int EN_COND_BYUSERID_PRO_VALUE = 0;
    /**
     * <code>EN_COND_BYIP_PRO = 1;</code>
     */
    public static final int EN_COND_BYIP_PRO_VALUE = 1;
    /**
     * <code>EN_COND_BYKEY_PRO = 2;</code>
     */
    public static final int EN_COND_BYKEY_PRO_VALUE = 2;
    /**
     * <code>EN_COND_BYROOMID_PRO = 3;</code>
     */
    public static final int EN_COND_BYROOMID_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static e_RoomQueyrCond_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_COND_BYUSERID_PRO;
        case 1: return EN_COND_BYIP_PRO;
        case 2: return EN_COND_BYKEY_PRO;
        case 3: return EN_COND_BYROOMID_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_RoomQueyrCond_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_RoomQueyrCond_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_RoomQueyrCond_PRO>() {
            public e_RoomQueyrCond_PRO findValueByNumber(int number) {
              return e_RoomQueyrCond_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(11);
    }

    private static final e_RoomQueyrCond_PRO[] VALUES = values();

    public static e_RoomQueyrCond_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_RoomQueyrCond_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_RoomQueyrCond_PRO)
  }

  /**
   * Protobuf enum {@code e_RoomCardModCond_PRO}
   *
   * <pre>
   *群昵称修改权限
   * </pre>
   */
  public enum e_RoomCardModCond_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_NICKMOD_NO_PRO = 0;</code>
     *
     * <pre>
     *不允许任何人修改
     * </pre>
     */
    EN_NICKMOD_NO_PRO(0, 0),
    /**
     * <code>EN_NICKMOD_ONLYHOST_PRO = 1;</code>
     *
     * <pre>
     *仅允许群主修改
     * </pre>
     */
    EN_NICKMOD_ONLYHOST_PRO(1, 1),
    /**
     * <code>EN_NIKCMOD_MANGALLOW_PRO = 2;</code>
     *
     * <pre>
     *允许管理员修改
     * </pre>
     */
    EN_NIKCMOD_MANGALLOW_PRO(2, 2),
    ;

    /**
     * <code>EN_NICKMOD_NO_PRO = 0;</code>
     *
     * <pre>
     *不允许任何人修改
     * </pre>
     */
    public static final int EN_NICKMOD_NO_PRO_VALUE = 0;
    /**
     * <code>EN_NICKMOD_ONLYHOST_PRO = 1;</code>
     *
     * <pre>
     *仅允许群主修改
     * </pre>
     */
    public static final int EN_NICKMOD_ONLYHOST_PRO_VALUE = 1;
    /**
     * <code>EN_NIKCMOD_MANGALLOW_PRO = 2;</code>
     *
     * <pre>
     *允许管理员修改
     * </pre>
     */
    public static final int EN_NIKCMOD_MANGALLOW_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_RoomCardModCond_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_NICKMOD_NO_PRO;
        case 1: return EN_NICKMOD_ONLYHOST_PRO;
        case 2: return EN_NIKCMOD_MANGALLOW_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_RoomCardModCond_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_RoomCardModCond_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_RoomCardModCond_PRO>() {
            public e_RoomCardModCond_PRO findValueByNumber(int number) {
              return e_RoomCardModCond_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(12);
    }

    private static final e_RoomCardModCond_PRO[] VALUES = values();

    public static e_RoomCardModCond_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_RoomCardModCond_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_RoomCardModCond_PRO)
  }

  /**
   * Protobuf enum {@code e_IdentityCheckType_PRO}
   *
   * <pre>
   *身份验证类型
   * </pre>
   */
  public enum e_IdentityCheckType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_IDENTITY_ENBALE_PRO = 0;</code>
     *
     * <pre>
     *允许
     * </pre>
     */
    EN_IDENTITY_ENBALE_PRO(0, 0),
    /**
     * <code>EN_IDENTITY_CHECK_PRO = 1;</code>
     *
     * <pre>
     *需要验证
     * </pre>
     */
    EN_IDENTITY_CHECK_PRO(1, 1),
    /**
     * <code>EN_IDENTITY_DISABLE_PRO = 2;</code>
     *
     * <pre>
     *不允许任何人加入
     * </pre>
     */
    EN_IDENTITY_DISABLE_PRO(2, 2),
    ;

    /**
     * <code>EN_IDENTITY_ENBALE_PRO = 0;</code>
     *
     * <pre>
     *允许
     * </pre>
     */
    public static final int EN_IDENTITY_ENBALE_PRO_VALUE = 0;
    /**
     * <code>EN_IDENTITY_CHECK_PRO = 1;</code>
     *
     * <pre>
     *需要验证
     * </pre>
     */
    public static final int EN_IDENTITY_CHECK_PRO_VALUE = 1;
    /**
     * <code>EN_IDENTITY_DISABLE_PRO = 2;</code>
     *
     * <pre>
     *不允许任何人加入
     * </pre>
     */
    public static final int EN_IDENTITY_DISABLE_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_IdentityCheckType_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_IDENTITY_ENBALE_PRO;
        case 1: return EN_IDENTITY_CHECK_PRO;
        case 2: return EN_IDENTITY_DISABLE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_IdentityCheckType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_IdentityCheckType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_IdentityCheckType_PRO>() {
            public e_IdentityCheckType_PRO findValueByNumber(int number) {
              return e_IdentityCheckType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(13);
    }

    private static final e_IdentityCheckType_PRO[] VALUES = values();

    public static e_IdentityCheckType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_IdentityCheckType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_IdentityCheckType_PRO)
  }

  /**
   * Protobuf enum {@code e_VisitType_PRO}
   *
   * <pre>
   *群访问权限类型
   * </pre>
   */
  public enum e_VisitType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_VISIT_CANNOTTENTER_PRO = 0;</code>
     *
     * <pre>
     *不可以进入
     * </pre>
     */
    EN_VISIT_CANNOTTENTER_PRO(0, 0),
    /**
     * <code>EN_VISIT_CANENTER_PRO = 1;</code>
     *
     * <pre>
     *可以进入
     * </pre>
     */
    EN_VISIT_CANENTER_PRO(1, 1),
    /**
     * <code>EN_VISIT_CANSPEAK_PRO = 2;</code>
     *
     * <pre>
     *可以发言
     * </pre>
     */
    EN_VISIT_CANSPEAK_PRO(2, 2),
    ;

    /**
     * <code>EN_VISIT_CANNOTTENTER_PRO = 0;</code>
     *
     * <pre>
     *不可以进入
     * </pre>
     */
    public static final int EN_VISIT_CANNOTTENTER_PRO_VALUE = 0;
    /**
     * <code>EN_VISIT_CANENTER_PRO = 1;</code>
     *
     * <pre>
     *可以进入
     * </pre>
     */
    public static final int EN_VISIT_CANENTER_PRO_VALUE = 1;
    /**
     * <code>EN_VISIT_CANSPEAK_PRO = 2;</code>
     *
     * <pre>
     *可以发言
     * </pre>
     */
    public static final int EN_VISIT_CANSPEAK_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_VisitType_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_VISIT_CANNOTTENTER_PRO;
        case 1: return EN_VISIT_CANENTER_PRO;
        case 2: return EN_VISIT_CANSPEAK_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_VisitType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_VisitType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_VisitType_PRO>() {
            public e_VisitType_PRO findValueByNumber(int number) {
              return e_VisitType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(14);
    }

    private static final e_VisitType_PRO[] VALUES = values();

    public static e_VisitType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_VisitType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_VisitType_PRO)
  }

  /**
   * Protobuf enum {@code e_ChatMsgType_PRO}
   *
   * <pre>
   *群聊天消息类型
   * </pre>
   */
  public enum e_ChatMsgType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_CHATMSG_TEXT_PRO = 0;</code>
     *
     * <pre>
     *文字消息
     * </pre>
     */
    EN_CHATMSG_TEXT_PRO(0, 0),
    /**
     * <code>EN_CHATMSG_MAGIC_PRO = 1;</code>
     *
     * <pre>
     *魔法表情
     * </pre>
     */
    EN_CHATMSG_MAGIC_PRO(1, 1),
    /**
     * <code>EN_CHATMSG_NOTIFY_PRO = 2;</code>
     *
     * <pre>
     *通知消息，各种提醒通知
     * </pre>
     */
    EN_CHATMSG_NOTIFY_PRO(2, 2),
    ;

    /**
     * <code>EN_CHATMSG_TEXT_PRO = 0;</code>
     *
     * <pre>
     *文字消息
     * </pre>
     */
    public static final int EN_CHATMSG_TEXT_PRO_VALUE = 0;
    /**
     * <code>EN_CHATMSG_MAGIC_PRO = 1;</code>
     *
     * <pre>
     *魔法表情
     * </pre>
     */
    public static final int EN_CHATMSG_MAGIC_PRO_VALUE = 1;
    /**
     * <code>EN_CHATMSG_NOTIFY_PRO = 2;</code>
     *
     * <pre>
     *通知消息，各种提醒通知
     * </pre>
     */
    public static final int EN_CHATMSG_NOTIFY_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_ChatMsgType_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_CHATMSG_TEXT_PRO;
        case 1: return EN_CHATMSG_MAGIC_PRO;
        case 2: return EN_CHATMSG_NOTIFY_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_ChatMsgType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_ChatMsgType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_ChatMsgType_PRO>() {
            public e_ChatMsgType_PRO findValueByNumber(int number) {
              return e_ChatMsgType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(15);
    }

    private static final e_ChatMsgType_PRO[] VALUES = values();

    public static e_ChatMsgType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_ChatMsgType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_ChatMsgType_PRO)
  }

  /**
   * Protobuf enum {@code e_RoomLevelType_PRO}
   */
  public enum e_RoomLevelType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>En_Level_Normal_PRO = 0;</code>
     *
     * <pre>
     *普通
     * </pre>
     */
    En_Level_Normal_PRO(0, 0),
    /**
     * <code>En_Level_Bronze_PRO = 1;</code>
     *
     * <pre>
     *青铜
     * </pre>
     */
    En_Level_Bronze_PRO(1, 1),
    /**
     * <code>En_Level_Silver_PRO = 2;</code>
     *
     * <pre>
     *白银
     * </pre>
     */
    En_Level_Silver_PRO(2, 2),
    /**
     * <code>En_Level_Gold_PRO = 3;</code>
     *
     * <pre>
     *黄金
     * </pre>
     */
    En_Level_Gold_PRO(3, 3),
    /**
     * <code>En_Level_WhiteGold_PRO = 4;</code>
     *
     * <pre>
     *白金
     * </pre>
     */
    En_Level_WhiteGold_PRO(4, 4),
    /**
     * <code>En_Level_diamond_PRO = 5;</code>
     *
     * <pre>
     *钻石
     * </pre>
     */
    En_Level_diamond_PRO(5, 5),
    ;

    /**
     * <code>En_Level_Normal_PRO = 0;</code>
     *
     * <pre>
     *普通
     * </pre>
     */
    public static final int En_Level_Normal_PRO_VALUE = 0;
    /**
     * <code>En_Level_Bronze_PRO = 1;</code>
     *
     * <pre>
     *青铜
     * </pre>
     */
    public static final int En_Level_Bronze_PRO_VALUE = 1;
    /**
     * <code>En_Level_Silver_PRO = 2;</code>
     *
     * <pre>
     *白银
     * </pre>
     */
    public static final int En_Level_Silver_PRO_VALUE = 2;
    /**
     * <code>En_Level_Gold_PRO = 3;</code>
     *
     * <pre>
     *黄金
     * </pre>
     */
    public static final int En_Level_Gold_PRO_VALUE = 3;
    /**
     * <code>En_Level_WhiteGold_PRO = 4;</code>
     *
     * <pre>
     *白金
     * </pre>
     */
    public static final int En_Level_WhiteGold_PRO_VALUE = 4;
    /**
     * <code>En_Level_diamond_PRO = 5;</code>
     *
     * <pre>
     *钻石
     * </pre>
     */
    public static final int En_Level_diamond_PRO_VALUE = 5;


    public final int getNumber() { return value; }

    public static e_RoomLevelType_PRO valueOf(int value) {
      switch (value) {
        case 0: return En_Level_Normal_PRO;
        case 1: return En_Level_Bronze_PRO;
        case 2: return En_Level_Silver_PRO;
        case 3: return En_Level_Gold_PRO;
        case 4: return En_Level_WhiteGold_PRO;
        case 5: return En_Level_diamond_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_RoomLevelType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_RoomLevelType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_RoomLevelType_PRO>() {
            public e_RoomLevelType_PRO findValueByNumber(int number) {
              return e_RoomLevelType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(16);
    }

    private static final e_RoomLevelType_PRO[] VALUES = values();

    public static e_RoomLevelType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_RoomLevelType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_RoomLevelType_PRO)
  }

  /**
   * Protobuf enum {@code e_AgeRangeType_PRO}
   *
   * <pre>
   *年龄范围
   * </pre>
   */
  public enum e_AgeRangeType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>En_ALL_PRO = 0;</code>
     *
     * <pre>
     *&lt;! 不限
     * </pre>
     */
    En_ALL_PRO(0, 0),
    /**
     * <code>En_16TO22_PRO = 1;</code>
     *
     * <pre>
     *&lt;! 16到22
     * </pre>
     */
    En_16TO22_PRO(1, 1),
    /**
     * <code>En_23TO30_PRO = 2;</code>
     *
     * <pre>
     *&lt;! 23到30
     * </pre>
     */
    En_23TO30_PRO(2, 2),
    /**
     * <code>En_31TO40_PRO = 3;</code>
     *
     * <pre>
     *&lt;! 31到40
     * </pre>
     */
    En_31TO40_PRO(3, 3),
    /**
     * <code>En_OVER41_PRO = 4;</code>
     *
     * <pre>
     *&lt;! 超过41
     * </pre>
     */
    En_OVER41_PRO(4, 4),
    ;

    /**
     * <code>En_ALL_PRO = 0;</code>
     *
     * <pre>
     *&lt;! 不限
     * </pre>
     */
    public static final int En_ALL_PRO_VALUE = 0;
    /**
     * <code>En_16TO22_PRO = 1;</code>
     *
     * <pre>
     *&lt;! 16到22
     * </pre>
     */
    public static final int En_16TO22_PRO_VALUE = 1;
    /**
     * <code>En_23TO30_PRO = 2;</code>
     *
     * <pre>
     *&lt;! 23到30
     * </pre>
     */
    public static final int En_23TO30_PRO_VALUE = 2;
    /**
     * <code>En_31TO40_PRO = 3;</code>
     *
     * <pre>
     *&lt;! 31到40
     * </pre>
     */
    public static final int En_31TO40_PRO_VALUE = 3;
    /**
     * <code>En_OVER41_PRO = 4;</code>
     *
     * <pre>
     *&lt;! 超过41
     * </pre>
     */
    public static final int En_OVER41_PRO_VALUE = 4;


    public final int getNumber() { return value; }

    public static e_AgeRangeType_PRO valueOf(int value) {
      switch (value) {
        case 0: return En_ALL_PRO;
        case 1: return En_16TO22_PRO;
        case 2: return En_23TO30_PRO;
        case 3: return En_31TO40_PRO;
        case 4: return En_OVER41_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_AgeRangeType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_AgeRangeType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_AgeRangeType_PRO>() {
            public e_AgeRangeType_PRO findValueByNumber(int number) {
              return e_AgeRangeType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(17);
    }

    private static final e_AgeRangeType_PRO[] VALUES = values();

    public static e_AgeRangeType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_AgeRangeType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_AgeRangeType_PRO)
  }

  /**
   * Protobuf enum {@code e_UrlType_PRO}
   *
   * <pre>
   *URL 类型
   * </pre>
   */
  public enum e_UrlType_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_URL_REGISTER_PRO = 0;</code>
     *
     * <pre>
     *注册
     * </pre>
     */
    EN_URL_REGISTER_PRO(0, 0),
    /**
     * <code>EN_URL_FORGETPWD_PRO = 1;</code>
     *
     * <pre>
     *忘记密码
     * </pre>
     */
    EN_URL_FORGETPWD_PRO(1, 1),
    /**
     * <code>EN_URL_MODMOVIBILE_PRO = 2;</code>
     *
     * <pre>
     *修改手机号
     * </pre>
     */
    EN_URL_MODMOVIBILE_PRO(2, 2),
    /**
     * <code>EN_URL_MODEMAIL_PRO = 3;</code>
     *
     * <pre>
     *修改邮箱
     * </pre>
     */
    EN_URL_MODEMAIL_PRO(3, 3),
    /**
     * <code>EN_URL_MODUSERINFO_PRO = 4;</code>
     *
     * <pre>
     *个人信息修改
     * </pre>
     */
    EN_URL_MODUSERINFO_PRO(4, 4),
    /**
     * <code>EN_URL_MODPWD_PRO = 5;</code>
     *
     * <pre>
     *修改密码
     * </pre>
     */
    EN_URL_MODPWD_PRO(5, 5),
    ;

    /**
     * <code>EN_URL_REGISTER_PRO = 0;</code>
     *
     * <pre>
     *注册
     * </pre>
     */
    public static final int EN_URL_REGISTER_PRO_VALUE = 0;
    /**
     * <code>EN_URL_FORGETPWD_PRO = 1;</code>
     *
     * <pre>
     *忘记密码
     * </pre>
     */
    public static final int EN_URL_FORGETPWD_PRO_VALUE = 1;
    /**
     * <code>EN_URL_MODMOVIBILE_PRO = 2;</code>
     *
     * <pre>
     *修改手机号
     * </pre>
     */
    public static final int EN_URL_MODMOVIBILE_PRO_VALUE = 2;
    /**
     * <code>EN_URL_MODEMAIL_PRO = 3;</code>
     *
     * <pre>
     *修改邮箱
     * </pre>
     */
    public static final int EN_URL_MODEMAIL_PRO_VALUE = 3;
    /**
     * <code>EN_URL_MODUSERINFO_PRO = 4;</code>
     *
     * <pre>
     *个人信息修改
     * </pre>
     */
    public static final int EN_URL_MODUSERINFO_PRO_VALUE = 4;
    /**
     * <code>EN_URL_MODPWD_PRO = 5;</code>
     *
     * <pre>
     *修改密码
     * </pre>
     */
    public static final int EN_URL_MODPWD_PRO_VALUE = 5;


    public final int getNumber() { return value; }

    public static e_UrlType_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_URL_REGISTER_PRO;
        case 1: return EN_URL_FORGETPWD_PRO;
        case 2: return EN_URL_MODMOVIBILE_PRO;
        case 3: return EN_URL_MODEMAIL_PRO;
        case 4: return EN_URL_MODUSERINFO_PRO;
        case 5: return EN_URL_MODPWD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_UrlType_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_UrlType_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_UrlType_PRO>() {
            public e_UrlType_PRO findValueByNumber(int number) {
              return e_UrlType_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(18);
    }

    private static final e_UrlType_PRO[] VALUES = values();

    public static e_UrlType_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_UrlType_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:e_UrlType_PRO)
  }

  /**
   * Protobuf enum {@code eOPERRESULT_PRO}
   *
   * <pre>
   *操作结果信息；
   * </pre>
   */
  public enum eOPERRESULT_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_OPER_SUCCESS_PRO = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    E_OPER_SUCCESS_PRO(0, 0),
    /**
     * <code>E_OPER_AUTHFAILER_PRO = 1;</code>
     *
     * <pre>
     *认证失败
     * </pre>
     */
    E_OPER_AUTHFAILER_PRO(1, 1),
    /**
     * <code>E_OPER_NOAUTHINFO_PRO = 2;</code>
     *
     * <pre>
     *认证信息不存在
     * </pre>
     */
    E_OPER_NOAUTHINFO_PRO(2, 2),
    /**
     * <code>E_OPER_USERORPASSWD_PRO = 3;</code>
     *
     * <pre>
     *用户名或密码错误;
     * </pre>
     */
    E_OPER_USERORPASSWD_PRO(3, 3),
    /**
     * <code>E_OPER_USERNOTEXIST_PRO = 4;</code>
     *
     * <pre>
     *用户不存在;
     * </pre>
     */
    E_OPER_USERNOTEXIST_PRO(4, 4),
    /**
     * <code>E_OPER_REJEST_ADDREQ_PRO = 5;</code>
     *
     * <pre>
     *拒绝加为好友;
     * </pre>
     */
    E_OPER_REJEST_ADDREQ_PRO(5, 5),
    /**
     * <code>E_OPER_ERRORPARAM_PRO = 6;</code>
     *
     * <pre>
     *参数错误;
     * </pre>
     */
    E_OPER_ERRORPARAM_PRO(6, 6),
    /**
     * <code>E_OPER_LINKERROR_PRO = 7;</code>
     *
     * <pre>
     *链路异常;
     * </pre>
     */
    E_OPER_LINKERROR_PRO(7, 7),
    /**
     * <code>E_OPER_CGINOMEMORY_PRO = 8;</code>
     *
     * <pre>
     *内存不足
     * </pre>
     */
    E_OPER_CGINOMEMORY_PRO(8, 8),
    /**
     * <code>E_OPER_DATABASEERROR_PRO = 9;</code>
     *
     * <pre>
     *数据库操作失败;
     * </pre>
     */
    E_OPER_DATABASEERROR_PRO(9, 9),
    /**
     * <code>E_OPER_PLOICIENOEXIST_PRO = 10;</code>
     *
     * <pre>
     *没有验证策略;
     * </pre>
     */
    E_OPER_PLOICIENOEXIST_PRO(10, 10),
    /**
     * <code>E_OPER_EMPTY_PLOICIEINFO_PRO = 11;</code>
     *
     * <pre>
     *策略内容为空
     * </pre>
     */
    E_OPER_EMPTY_PLOICIEINFO_PRO(11, 11),
    /**
     * <code>E_OPER_PLOICIENOERROR_PRO = 12;</code>
     *
     * <pre>
     *验证策略不符
     * </pre>
     */
    E_OPER_PLOICIENOERROR_PRO(12, 12),
    /**
     * <code>E_OPER_NOOFFLINMSG_PRO = 13;</code>
     *
     * <pre>
     *没有离线消息;
     * </pre>
     */
    E_OPER_NOOFFLINMSG_PRO(13, 13),
    /**
     * <code>E_OPER_SERVICEBUSY_PRO = 14;</code>
     *
     * <pre>
     *服务器忙
     * </pre>
     */
    E_OPER_SERVICEBUSY_PRO(14, 14),
    /**
     * <code>E_OPER_ROOMNOTHERUSER_PRO = 15;</code>
     *
     * <pre>
     *群中没有该用户
     * </pre>
     */
    E_OPER_ROOMNOTHERUSER_PRO(15, 15),
    /**
     * <code>E_OPER_ROOMNOEXIST_PRO = 16;</code>
     *
     * <pre>
     *该群信息不存在
     * </pre>
     */
    E_OPER_ROOMNOEXIST_PRO(16, 16),
    /**
     * <code>E_OPER_MODROOMALIASFAIL_PRO = 17;</code>
     *
     * <pre>
     *修改群备注名失败
     * </pre>
     */
    E_OPER_MODROOMALIASFAIL_PRO(17, 17),
    /**
     * <code>E_OPER_ROOMNOTMANAGER_PRO = 18;</code>
     *
     * <pre>
     *非群管理员或群主;不能踢人;
     * </pre>
     */
    E_OPER_ROOMNOTMANAGER_PRO(18, 18),
    /**
     * <code>E_OPER_SETMANAGERONLYHOST_PRO = 19;</code>
     *
     * <pre>
     *仅群主能设置管理员；
     * </pre>
     */
    E_OPER_SETMANAGERONLYHOST_PRO(19, 19),
    /**
     * <code>E_OPER_ROOMHAVEMAXMANAGER_PRO = 20;</code>
     *
     * <pre>
     *管理员人数已达上限;
     * </pre>
     */
    E_OPER_ROOMHAVEMAXMANAGER_PRO(20, 20),
    /**
     * <code>E_OPER_ALREADYLOGIN_PRO = 21;</code>
     *
     * <pre>
     *该用户已登录
     * </pre>
     */
    E_OPER_ALREADYLOGIN_PRO(21, 21),
    /**
     * <code>E_OPER_SYS_CATCH_ERROR_PRO = 22;</code>
     *
     * <pre>
     *程序异常
     * </pre>
     */
    E_OPER_SYS_CATCH_ERROR_PRO(22, 22),
    /**
     * <code>E_OPER_ERROR_DBADMIN_PRO = 23;</code>
     *
     * <pre>
     *提取数据库超级用户ID失败。
     * </pre>
     */
    E_OPER_ERROR_DBADMIN_PRO(23, 23),
    /**
     * <code>E_OPER_GETRESULT_ISNULL_PRO = 24;</code>
     *
     * <pre>
     *查询结果为空
     * </pre>
     */
    E_OPER_GETRESULT_ISNULL_PRO(24, 24),
    /**
     * <code>E_OPER_OVERROOMCOUNT_PRO = 25;</code>
     *
     * <pre>
     *超过群服务器建群数目
     * </pre>
     */
    E_OPER_OVERROOMCOUNT_PRO(25, 25),
    /**
     * <code>E_OPER_NOTLOGIN_PRO = 26;</code>
     *
     * <pre>
     *用户未登录
     * </pre>
     */
    E_OPER_NOTLOGIN_PRO(26, 26),
    /**
     * <code>E_OPER_OPERTERMINATED_PRO = 27;</code>
     *
     * <pre>
     *操作被终止
     * </pre>
     */
    E_OPER_OPERTERMINATED_PRO(27, 27),
    /**
     * <code>E_OPER_CLIENTVERERROR_PRO = 28;</code>
     *
     * <pre>
     *客户端版本不正确
     * </pre>
     */
    E_OPER_CLIENTVERERROR_PRO(28, 28),
    /**
     * <code>E_OPER_HOSTREJECTLEAVE_PRO = 29;</code>
     *
     * <pre>
     *不允许群主退群
     * </pre>
     */
    E_OPER_HOSTREJECTLEAVE_PRO(29, 29),
    /**
     * <code>E_OPER_ONLYHOSTOPER_PRO = 30;</code>
     *
     * <pre>
     *只有群主可以执行此操作
     * </pre>
     */
    E_OPER_ONLYHOSTOPER_PRO(30, 30),
    /**
     * <code>E_OPER_DB_ALLOC_FAILURE_PRO = 40;</code>
     *
     * <pre>
     *内存申请失败；
     * </pre>
     */
    E_OPER_DB_ALLOC_FAILURE_PRO(31, 40),
    /**
     * <code>E_OPER_DB_DBCONN_ERROR_PRO = 41;</code>
     *
     * <pre>
     *连接数据库失败;
     * </pre>
     */
    E_OPER_DB_DBCONN_ERROR_PRO(32, 41),
    /**
     * <code>E_OPER_DB_SQLCONTENT_ERROR_PRO = 42;</code>
     *
     * <pre>
     *SQL语句有误
     * </pre>
     */
    E_OPER_DB_SQLCONTENT_ERROR_PRO(33, 42),
    /**
     * <code>E_OPER_DB_EXECSQL_ERROR_PRO = 43;</code>
     *
     * <pre>
     *执行SQL语句失败;
     * </pre>
     */
    E_OPER_DB_EXECSQL_ERROR_PRO(34, 43),
    /**
     * <code>E_OPER_DB_SPROC_ERROR_PRO = 44;</code>
     *
     * <pre>
     *存储过程调用方式有误.
     * </pre>
     */
    E_OPER_DB_SPROC_ERROR_PRO(35, 44),
    /**
     * <code>E_OPER_DB_EXECPORC_ERROR_PRO = 45;</code>
     *
     * <pre>
     *执行存储过程失败;
     * </pre>
     */
    E_OPER_DB_EXECPORC_ERROR_PRO(36, 45),
    /**
     * <code>E_OPER_DB_INVALID_PARAM_PRO = 46;</code>
     *
     * <pre>
     *参数不正确
     * </pre>
     */
    E_OPER_DB_INVALID_PARAM_PRO(37, 46),
    /**
     * <code>E_OPER_DB_FETCHRESULT_ERROR_PRO = 47;</code>
     *
     * <pre>
     *执行结果错误
     * </pre>
     */
    E_OPER_DB_FETCHRESULT_ERROR_PRO(38, 47),
    /**
     * <code>E_OPER_DB_USERORPASSWD_PRO = 50;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    E_OPER_DB_USERORPASSWD_PRO(39, 50),
    /**
     * <code>E_OPER_DB_USERNO_ERROR_PRO = 51;</code>
     *
     * <pre>
     *用户UserID号不正确
     * </pre>
     */
    E_OPER_DB_USERNO_ERROR_PRO(40, 51),
    /**
     * <code>E_OPER_DB_ADMIN_NOTEXIST_PRO = 52;</code>
     *
     * <pre>
     *管理员角色不存在
     * </pre>
     */
    E_OPER_DB_ADMIN_NOTEXIST_PRO(41, 52),
    /**
     * <code>E_OPER_DB_NOADMIN_PRO = 53;</code>
     *
     * <pre>
     *用户不是管理员
     * </pre>
     */
    E_OPER_DB_NOADMIN_PRO(42, 53),
    /**
     * <code>E_OPER_DB_POLICIE_FAILURE_PRO = 54;</code>
     *
     * <pre>
     *安全策略验证失败	
     * </pre>
     */
    E_OPER_DB_POLICIE_FAILURE_PRO(43, 54),
    /**
     * <code>E_OPER_DB_EMAIL_NOTEXIST_PRO = 55;</code>
     *
     * <pre>
     *用户邮箱不存在或禁用
     * </pre>
     */
    E_OPER_DB_EMAIL_NOTEXIST_PRO(44, 55),
    /**
     * <code>E_OPER_DB_KEYWORD_EXIST_PRO = 56;</code>
     *
     * <pre>
     *关键字已经存在
     * </pre>
     */
    E_OPER_DB_KEYWORD_EXIST_PRO(45, 56),
    /**
     * <code>E_OPER_DB_LOAD_MODETYPE_PRO = 57;</code>
     *
     * <pre>
     *加载模块类型不明确
     * </pre>
     */
    E_OPER_DB_LOAD_MODETYPE_PRO(46, 57),
    /**
     * <code>E_OPER_DB_NOT_FRIENDS_PRO = 58;</code>
     *
     * <pre>
     *用户不在好友列表中
     * </pre>
     */
    E_OPER_DB_NOT_FRIENDS_PRO(47, 58),
    /**
     * <code>E_OPER_DB_NOT_USERGROUP_PRO = 59;</code>
     *
     * <pre>
     *用户分组不存在
     * </pre>
     */
    E_OPER_DB_NOT_USERGROUP_PRO(48, 59),
    /**
     * <code>E_OPER_DB_MAX_ROOMMBMS_PRO = 60;</code>
     *
     * <pre>
     *群成员已达到最大数量	
     * </pre>
     */
    E_OPER_DB_MAX_ROOMMBMS_PRO(49, 60),
    /**
     * <code>E_OPER_DB_ACTIVE_TYPE_PRO = 61;</code>
     *
     * <pre>
     *用户激活类型不明确	
     * </pre>
     */
    E_OPER_DB_ACTIVE_TYPE_PRO(50, 61),
    /**
     * <code>E_OPER_DB_ACCOUNT_ACTIVE_PRO = 62;</code>
     *
     * <pre>
     *用户激活账号失败
     * </pre>
     */
    E_OPER_DB_ACCOUNT_ACTIVE_PRO(51, 62),
    /**
     * <code>E_OPER_DB_MOBILE_EXIST_PRO = 63;</code>
     *
     * <pre>
     *电话号码已经存在
     * </pre>
     */
    E_OPER_DB_MOBILE_EXIST_PRO(52, 63),
    /**
     * <code>E_OPER_DB_EMAIL_EXIST_PRO = 64;</code>
     *
     * <pre>
     *邮箱地址已经存在
     * </pre>
     */
    E_OPER_DB_EMAIL_EXIST_PRO(53, 64),
    /**
     * <code>E_OPER_DB_REGISTER_TYPE_PRO = 65;</code>
     *
     * <pre>
     *用户注册类型不明确
     * </pre>
     */
    E_OPER_DB_REGISTER_TYPE_PRO(54, 65),
    /**
     * <code>E_OPER_DB_EXIST_FRIENDS_PRO = 66;</code>
     *
     * <pre>
     *用户已在好友列表中
     * </pre>
     */
    E_OPER_DB_EXIST_FRIENDS_PRO(55, 66),
    /**
     * <code>E_OPER_DB_USERID_ISUSED_PRO = 67;</code>
     *
     * <pre>
     *该UserID已经被使用
     * </pre>
     */
    E_OPER_DB_USERID_ISUSED_PRO(56, 67),
    /**
     * <code>E_OPER_DB_GETWAY_ISUSED_PRO = 68;</code>
     *
     * <pre>
     *网关ID已经被使用
     * </pre>
     */
    E_OPER_DB_GETWAY_ISUSED_PRO(57, 68),
    /**
     * <code>E_OPER_DB_USER_HADROOMS_PRO = 69;</code>
     *
     * <pre>
     *用户已经在房间列表中
     * </pre>
     */
    E_OPER_DB_USER_HADROOMS_PRO(58, 69),
    /**
     * <code>E_OPER_DB_USERINFO_REJECT_PRO = 70;</code>
     *
     * <pre>
     *用户已设置查看权限
     * </pre>
     */
    E_OPER_DB_USERINFO_REJECT_PRO(59, 70),
    ;

    /**
     * <code>E_OPER_SUCCESS_PRO = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    public static final int E_OPER_SUCCESS_PRO_VALUE = 0;
    /**
     * <code>E_OPER_AUTHFAILER_PRO = 1;</code>
     *
     * <pre>
     *认证失败
     * </pre>
     */
    public static final int E_OPER_AUTHFAILER_PRO_VALUE = 1;
    /**
     * <code>E_OPER_NOAUTHINFO_PRO = 2;</code>
     *
     * <pre>
     *认证信息不存在
     * </pre>
     */
    public static final int E_OPER_NOAUTHINFO_PRO_VALUE = 2;
    /**
     * <code>E_OPER_USERORPASSWD_PRO = 3;</code>
     *
     * <pre>
     *用户名或密码错误;
     * </pre>
     */
    public static final int E_OPER_USERORPASSWD_PRO_VALUE = 3;
    /**
     * <code>E_OPER_USERNOTEXIST_PRO = 4;</code>
     *
     * <pre>
     *用户不存在;
     * </pre>
     */
    public static final int E_OPER_USERNOTEXIST_PRO_VALUE = 4;
    /**
     * <code>E_OPER_REJEST_ADDREQ_PRO = 5;</code>
     *
     * <pre>
     *拒绝加为好友;
     * </pre>
     */
    public static final int E_OPER_REJEST_ADDREQ_PRO_VALUE = 5;
    /**
     * <code>E_OPER_ERRORPARAM_PRO = 6;</code>
     *
     * <pre>
     *参数错误;
     * </pre>
     */
    public static final int E_OPER_ERRORPARAM_PRO_VALUE = 6;
    /**
     * <code>E_OPER_LINKERROR_PRO = 7;</code>
     *
     * <pre>
     *链路异常;
     * </pre>
     */
    public static final int E_OPER_LINKERROR_PRO_VALUE = 7;
    /**
     * <code>E_OPER_CGINOMEMORY_PRO = 8;</code>
     *
     * <pre>
     *内存不足
     * </pre>
     */
    public static final int E_OPER_CGINOMEMORY_PRO_VALUE = 8;
    /**
     * <code>E_OPER_DATABASEERROR_PRO = 9;</code>
     *
     * <pre>
     *数据库操作失败;
     * </pre>
     */
    public static final int E_OPER_DATABASEERROR_PRO_VALUE = 9;
    /**
     * <code>E_OPER_PLOICIENOEXIST_PRO = 10;</code>
     *
     * <pre>
     *没有验证策略;
     * </pre>
     */
    public static final int E_OPER_PLOICIENOEXIST_PRO_VALUE = 10;
    /**
     * <code>E_OPER_EMPTY_PLOICIEINFO_PRO = 11;</code>
     *
     * <pre>
     *策略内容为空
     * </pre>
     */
    public static final int E_OPER_EMPTY_PLOICIEINFO_PRO_VALUE = 11;
    /**
     * <code>E_OPER_PLOICIENOERROR_PRO = 12;</code>
     *
     * <pre>
     *验证策略不符
     * </pre>
     */
    public static final int E_OPER_PLOICIENOERROR_PRO_VALUE = 12;
    /**
     * <code>E_OPER_NOOFFLINMSG_PRO = 13;</code>
     *
     * <pre>
     *没有离线消息;
     * </pre>
     */
    public static final int E_OPER_NOOFFLINMSG_PRO_VALUE = 13;
    /**
     * <code>E_OPER_SERVICEBUSY_PRO = 14;</code>
     *
     * <pre>
     *服务器忙
     * </pre>
     */
    public static final int E_OPER_SERVICEBUSY_PRO_VALUE = 14;
    /**
     * <code>E_OPER_ROOMNOTHERUSER_PRO = 15;</code>
     *
     * <pre>
     *群中没有该用户
     * </pre>
     */
    public static final int E_OPER_ROOMNOTHERUSER_PRO_VALUE = 15;
    /**
     * <code>E_OPER_ROOMNOEXIST_PRO = 16;</code>
     *
     * <pre>
     *该群信息不存在
     * </pre>
     */
    public static final int E_OPER_ROOMNOEXIST_PRO_VALUE = 16;
    /**
     * <code>E_OPER_MODROOMALIASFAIL_PRO = 17;</code>
     *
     * <pre>
     *修改群备注名失败
     * </pre>
     */
    public static final int E_OPER_MODROOMALIASFAIL_PRO_VALUE = 17;
    /**
     * <code>E_OPER_ROOMNOTMANAGER_PRO = 18;</code>
     *
     * <pre>
     *非群管理员或群主;不能踢人;
     * </pre>
     */
    public static final int E_OPER_ROOMNOTMANAGER_PRO_VALUE = 18;
    /**
     * <code>E_OPER_SETMANAGERONLYHOST_PRO = 19;</code>
     *
     * <pre>
     *仅群主能设置管理员；
     * </pre>
     */
    public static final int E_OPER_SETMANAGERONLYHOST_PRO_VALUE = 19;
    /**
     * <code>E_OPER_ROOMHAVEMAXMANAGER_PRO = 20;</code>
     *
     * <pre>
     *管理员人数已达上限;
     * </pre>
     */
    public static final int E_OPER_ROOMHAVEMAXMANAGER_PRO_VALUE = 20;
    /**
     * <code>E_OPER_ALREADYLOGIN_PRO = 21;</code>
     *
     * <pre>
     *该用户已登录
     * </pre>
     */
    public static final int E_OPER_ALREADYLOGIN_PRO_VALUE = 21;
    /**
     * <code>E_OPER_SYS_CATCH_ERROR_PRO = 22;</code>
     *
     * <pre>
     *程序异常
     * </pre>
     */
    public static final int E_OPER_SYS_CATCH_ERROR_PRO_VALUE = 22;
    /**
     * <code>E_OPER_ERROR_DBADMIN_PRO = 23;</code>
     *
     * <pre>
     *提取数据库超级用户ID失败。
     * </pre>
     */
    public static final int E_OPER_ERROR_DBADMIN_PRO_VALUE = 23;
    /**
     * <code>E_OPER_GETRESULT_ISNULL_PRO = 24;</code>
     *
     * <pre>
     *查询结果为空
     * </pre>
     */
    public static final int E_OPER_GETRESULT_ISNULL_PRO_VALUE = 24;
    /**
     * <code>E_OPER_OVERROOMCOUNT_PRO = 25;</code>
     *
     * <pre>
     *超过群服务器建群数目
     * </pre>
     */
    public static final int E_OPER_OVERROOMCOUNT_PRO_VALUE = 25;
    /**
     * <code>E_OPER_NOTLOGIN_PRO = 26;</code>
     *
     * <pre>
     *用户未登录
     * </pre>
     */
    public static final int E_OPER_NOTLOGIN_PRO_VALUE = 26;
    /**
     * <code>E_OPER_OPERTERMINATED_PRO = 27;</code>
     *
     * <pre>
     *操作被终止
     * </pre>
     */
    public static final int E_OPER_OPERTERMINATED_PRO_VALUE = 27;
    /**
     * <code>E_OPER_CLIENTVERERROR_PRO = 28;</code>
     *
     * <pre>
     *客户端版本不正确
     * </pre>
     */
    public static final int E_OPER_CLIENTVERERROR_PRO_VALUE = 28;
    /**
     * <code>E_OPER_HOSTREJECTLEAVE_PRO = 29;</code>
     *
     * <pre>
     *不允许群主退群
     * </pre>
     */
    public static final int E_OPER_HOSTREJECTLEAVE_PRO_VALUE = 29;
    /**
     * <code>E_OPER_ONLYHOSTOPER_PRO = 30;</code>
     *
     * <pre>
     *只有群主可以执行此操作
     * </pre>
     */
    public static final int E_OPER_ONLYHOSTOPER_PRO_VALUE = 30;
    /**
     * <code>E_OPER_DB_ALLOC_FAILURE_PRO = 40;</code>
     *
     * <pre>
     *内存申请失败；
     * </pre>
     */
    public static final int E_OPER_DB_ALLOC_FAILURE_PRO_VALUE = 40;
    /**
     * <code>E_OPER_DB_DBCONN_ERROR_PRO = 41;</code>
     *
     * <pre>
     *连接数据库失败;
     * </pre>
     */
    public static final int E_OPER_DB_DBCONN_ERROR_PRO_VALUE = 41;
    /**
     * <code>E_OPER_DB_SQLCONTENT_ERROR_PRO = 42;</code>
     *
     * <pre>
     *SQL语句有误
     * </pre>
     */
    public static final int E_OPER_DB_SQLCONTENT_ERROR_PRO_VALUE = 42;
    /**
     * <code>E_OPER_DB_EXECSQL_ERROR_PRO = 43;</code>
     *
     * <pre>
     *执行SQL语句失败;
     * </pre>
     */
    public static final int E_OPER_DB_EXECSQL_ERROR_PRO_VALUE = 43;
    /**
     * <code>E_OPER_DB_SPROC_ERROR_PRO = 44;</code>
     *
     * <pre>
     *存储过程调用方式有误.
     * </pre>
     */
    public static final int E_OPER_DB_SPROC_ERROR_PRO_VALUE = 44;
    /**
     * <code>E_OPER_DB_EXECPORC_ERROR_PRO = 45;</code>
     *
     * <pre>
     *执行存储过程失败;
     * </pre>
     */
    public static final int E_OPER_DB_EXECPORC_ERROR_PRO_VALUE = 45;
    /**
     * <code>E_OPER_DB_INVALID_PARAM_PRO = 46;</code>
     *
     * <pre>
     *参数不正确
     * </pre>
     */
    public static final int E_OPER_DB_INVALID_PARAM_PRO_VALUE = 46;
    /**
     * <code>E_OPER_DB_FETCHRESULT_ERROR_PRO = 47;</code>
     *
     * <pre>
     *执行结果错误
     * </pre>
     */
    public static final int E_OPER_DB_FETCHRESULT_ERROR_PRO_VALUE = 47;
    /**
     * <code>E_OPER_DB_USERORPASSWD_PRO = 50;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    public static final int E_OPER_DB_USERORPASSWD_PRO_VALUE = 50;
    /**
     * <code>E_OPER_DB_USERNO_ERROR_PRO = 51;</code>
     *
     * <pre>
     *用户UserID号不正确
     * </pre>
     */
    public static final int E_OPER_DB_USERNO_ERROR_PRO_VALUE = 51;
    /**
     * <code>E_OPER_DB_ADMIN_NOTEXIST_PRO = 52;</code>
     *
     * <pre>
     *管理员角色不存在
     * </pre>
     */
    public static final int E_OPER_DB_ADMIN_NOTEXIST_PRO_VALUE = 52;
    /**
     * <code>E_OPER_DB_NOADMIN_PRO = 53;</code>
     *
     * <pre>
     *用户不是管理员
     * </pre>
     */
    public static final int E_OPER_DB_NOADMIN_PRO_VALUE = 53;
    /**
     * <code>E_OPER_DB_POLICIE_FAILURE_PRO = 54;</code>
     *
     * <pre>
     *安全策略验证失败	
     * </pre>
     */
    public static final int E_OPER_DB_POLICIE_FAILURE_PRO_VALUE = 54;
    /**
     * <code>E_OPER_DB_EMAIL_NOTEXIST_PRO = 55;</code>
     *
     * <pre>
     *用户邮箱不存在或禁用
     * </pre>
     */
    public static final int E_OPER_DB_EMAIL_NOTEXIST_PRO_VALUE = 55;
    /**
     * <code>E_OPER_DB_KEYWORD_EXIST_PRO = 56;</code>
     *
     * <pre>
     *关键字已经存在
     * </pre>
     */
    public static final int E_OPER_DB_KEYWORD_EXIST_PRO_VALUE = 56;
    /**
     * <code>E_OPER_DB_LOAD_MODETYPE_PRO = 57;</code>
     *
     * <pre>
     *加载模块类型不明确
     * </pre>
     */
    public static final int E_OPER_DB_LOAD_MODETYPE_PRO_VALUE = 57;
    /**
     * <code>E_OPER_DB_NOT_FRIENDS_PRO = 58;</code>
     *
     * <pre>
     *用户不在好友列表中
     * </pre>
     */
    public static final int E_OPER_DB_NOT_FRIENDS_PRO_VALUE = 58;
    /**
     * <code>E_OPER_DB_NOT_USERGROUP_PRO = 59;</code>
     *
     * <pre>
     *用户分组不存在
     * </pre>
     */
    public static final int E_OPER_DB_NOT_USERGROUP_PRO_VALUE = 59;
    /**
     * <code>E_OPER_DB_MAX_ROOMMBMS_PRO = 60;</code>
     *
     * <pre>
     *群成员已达到最大数量	
     * </pre>
     */
    public static final int E_OPER_DB_MAX_ROOMMBMS_PRO_VALUE = 60;
    /**
     * <code>E_OPER_DB_ACTIVE_TYPE_PRO = 61;</code>
     *
     * <pre>
     *用户激活类型不明确	
     * </pre>
     */
    public static final int E_OPER_DB_ACTIVE_TYPE_PRO_VALUE = 61;
    /**
     * <code>E_OPER_DB_ACCOUNT_ACTIVE_PRO = 62;</code>
     *
     * <pre>
     *用户激活账号失败
     * </pre>
     */
    public static final int E_OPER_DB_ACCOUNT_ACTIVE_PRO_VALUE = 62;
    /**
     * <code>E_OPER_DB_MOBILE_EXIST_PRO = 63;</code>
     *
     * <pre>
     *电话号码已经存在
     * </pre>
     */
    public static final int E_OPER_DB_MOBILE_EXIST_PRO_VALUE = 63;
    /**
     * <code>E_OPER_DB_EMAIL_EXIST_PRO = 64;</code>
     *
     * <pre>
     *邮箱地址已经存在
     * </pre>
     */
    public static final int E_OPER_DB_EMAIL_EXIST_PRO_VALUE = 64;
    /**
     * <code>E_OPER_DB_REGISTER_TYPE_PRO = 65;</code>
     *
     * <pre>
     *用户注册类型不明确
     * </pre>
     */
    public static final int E_OPER_DB_REGISTER_TYPE_PRO_VALUE = 65;
    /**
     * <code>E_OPER_DB_EXIST_FRIENDS_PRO = 66;</code>
     *
     * <pre>
     *用户已在好友列表中
     * </pre>
     */
    public static final int E_OPER_DB_EXIST_FRIENDS_PRO_VALUE = 66;
    /**
     * <code>E_OPER_DB_USERID_ISUSED_PRO = 67;</code>
     *
     * <pre>
     *该UserID已经被使用
     * </pre>
     */
    public static final int E_OPER_DB_USERID_ISUSED_PRO_VALUE = 67;
    /**
     * <code>E_OPER_DB_GETWAY_ISUSED_PRO = 68;</code>
     *
     * <pre>
     *网关ID已经被使用
     * </pre>
     */
    public static final int E_OPER_DB_GETWAY_ISUSED_PRO_VALUE = 68;
    /**
     * <code>E_OPER_DB_USER_HADROOMS_PRO = 69;</code>
     *
     * <pre>
     *用户已经在房间列表中
     * </pre>
     */
    public static final int E_OPER_DB_USER_HADROOMS_PRO_VALUE = 69;
    /**
     * <code>E_OPER_DB_USERINFO_REJECT_PRO = 70;</code>
     *
     * <pre>
     *用户已设置查看权限
     * </pre>
     */
    public static final int E_OPER_DB_USERINFO_REJECT_PRO_VALUE = 70;


    public final int getNumber() { return value; }

    public static eOPERRESULT_PRO valueOf(int value) {
      switch (value) {
        case 0: return E_OPER_SUCCESS_PRO;
        case 1: return E_OPER_AUTHFAILER_PRO;
        case 2: return E_OPER_NOAUTHINFO_PRO;
        case 3: return E_OPER_USERORPASSWD_PRO;
        case 4: return E_OPER_USERNOTEXIST_PRO;
        case 5: return E_OPER_REJEST_ADDREQ_PRO;
        case 6: return E_OPER_ERRORPARAM_PRO;
        case 7: return E_OPER_LINKERROR_PRO;
        case 8: return E_OPER_CGINOMEMORY_PRO;
        case 9: return E_OPER_DATABASEERROR_PRO;
        case 10: return E_OPER_PLOICIENOEXIST_PRO;
        case 11: return E_OPER_EMPTY_PLOICIEINFO_PRO;
        case 12: return E_OPER_PLOICIENOERROR_PRO;
        case 13: return E_OPER_NOOFFLINMSG_PRO;
        case 14: return E_OPER_SERVICEBUSY_PRO;
        case 15: return E_OPER_ROOMNOTHERUSER_PRO;
        case 16: return E_OPER_ROOMNOEXIST_PRO;
        case 17: return E_OPER_MODROOMALIASFAIL_PRO;
        case 18: return E_OPER_ROOMNOTMANAGER_PRO;
        case 19: return E_OPER_SETMANAGERONLYHOST_PRO;
        case 20: return E_OPER_ROOMHAVEMAXMANAGER_PRO;
        case 21: return E_OPER_ALREADYLOGIN_PRO;
        case 22: return E_OPER_SYS_CATCH_ERROR_PRO;
        case 23: return E_OPER_ERROR_DBADMIN_PRO;
        case 24: return E_OPER_GETRESULT_ISNULL_PRO;
        case 25: return E_OPER_OVERROOMCOUNT_PRO;
        case 26: return E_OPER_NOTLOGIN_PRO;
        case 27: return E_OPER_OPERTERMINATED_PRO;
        case 28: return E_OPER_CLIENTVERERROR_PRO;
        case 29: return E_OPER_HOSTREJECTLEAVE_PRO;
        case 30: return E_OPER_ONLYHOSTOPER_PRO;
        case 40: return E_OPER_DB_ALLOC_FAILURE_PRO;
        case 41: return E_OPER_DB_DBCONN_ERROR_PRO;
        case 42: return E_OPER_DB_SQLCONTENT_ERROR_PRO;
        case 43: return E_OPER_DB_EXECSQL_ERROR_PRO;
        case 44: return E_OPER_DB_SPROC_ERROR_PRO;
        case 45: return E_OPER_DB_EXECPORC_ERROR_PRO;
        case 46: return E_OPER_DB_INVALID_PARAM_PRO;
        case 47: return E_OPER_DB_FETCHRESULT_ERROR_PRO;
        case 50: return E_OPER_DB_USERORPASSWD_PRO;
        case 51: return E_OPER_DB_USERNO_ERROR_PRO;
        case 52: return E_OPER_DB_ADMIN_NOTEXIST_PRO;
        case 53: return E_OPER_DB_NOADMIN_PRO;
        case 54: return E_OPER_DB_POLICIE_FAILURE_PRO;
        case 55: return E_OPER_DB_EMAIL_NOTEXIST_PRO;
        case 56: return E_OPER_DB_KEYWORD_EXIST_PRO;
        case 57: return E_OPER_DB_LOAD_MODETYPE_PRO;
        case 58: return E_OPER_DB_NOT_FRIENDS_PRO;
        case 59: return E_OPER_DB_NOT_USERGROUP_PRO;
        case 60: return E_OPER_DB_MAX_ROOMMBMS_PRO;
        case 61: return E_OPER_DB_ACTIVE_TYPE_PRO;
        case 62: return E_OPER_DB_ACCOUNT_ACTIVE_PRO;
        case 63: return E_OPER_DB_MOBILE_EXIST_PRO;
        case 64: return E_OPER_DB_EMAIL_EXIST_PRO;
        case 65: return E_OPER_DB_REGISTER_TYPE_PRO;
        case 66: return E_OPER_DB_EXIST_FRIENDS_PRO;
        case 67: return E_OPER_DB_USERID_ISUSED_PRO;
        case 68: return E_OPER_DB_GETWAY_ISUSED_PRO;
        case 69: return E_OPER_DB_USER_HADROOMS_PRO;
        case 70: return E_OPER_DB_USERINFO_REJECT_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>() {
            public eOPERRESULT_PRO findValueByNumber(int number) {
              return eOPERRESULT_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(19);
    }

    private static final eOPERRESULT_PRO[] VALUES = values();

    public static eOPERRESULT_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eOPERRESULT_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eOPERRESULT_PRO)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010enum.pro*<\n\re_MsgOper_PRO\022\r\n\tE_ADD_PRO" +
      "\020\000\022\r\n\tE_DEL_PRO\020\001\022\r\n\tE_MOD_PRO\020\002*E\n\017e_Ro" +
      "omRoles_PRO\022\016\n\nE_HOST_PRO\020\000\022\020\n\014E_MANGER_" +
      "PRO\020\001\022\020\n\014E_NORMAL_PRO\020\002*3\n\re_NetType_PRO" +
      "\022\020\n\014E_NETTCP_PRO\020\000\022\020\n\014E_NETUDP_PRO\020\001*\203\001\n" +
      "\020en_sysStatus_PRO\022\032\n\026SYSTEM_STATUS_IDLE_" +
      "PRO\020\000\022\034\n\030SYSTEM_STATUS_NORMAL_PRO\020\001\022\032\n\026S" +
      "YSTEM_STATUS_BUSY_PRO\020\002\022\031\n\025SYSTEM_STATUS" +
      "_DIE_PRO\020\003*o\n\017eCLIENTTYPE_PRO\022\024\n\020en_CLIE" +
      "NT_PC_PRO\020\000\022\025\n\021en_CLIENT_WEB_PRO\020\001\022\030\n\024en",
      "_CLIENT_IPHONE_PRO\020\002\022\025\n\021en_CLIENT_PAD_PR" +
      "O\020\003*a\n\020eACCOUNTTYPE_PRO\022\031\n\025en_ACCOUNT_US" +
      "ERID_PRO\020\000\022\030\n\024en_ACCOUNT_EMAIL_PRO\020\001\022\030\n\024" +
      "en_ACCOUNT_PHONE_PRO\020\002*x\n\021eONLINESTATUS_" +
      "PRO\022\030\n\024en_STATUS_ONLINE_PRO\020\000\022\026\n\022en_STAT" +
      "US_HIDE_PRO\020\001\022\031\n\025en_STATUS_OFFLINE_PRO\020\002" +
      "\022\026\n\022en_STATUS_BUSY_PRO\020\003*t\n\014ePLOICIE_PRO" +
      "\022\025\n\021en_PLOICIE_NO_PRO\020\000\022\031\n\025en_PLOICIE_AN" +
      "SWER_PRO\020\001\022\030\n\024en_PLOICIE_CHECK_PRO\020\002\022\030\n\024" +
      "en_PLOICIE_OTHER_PRO\020\003*q\n\016e_ROOMTYPE_PRO",
      "\022\026\n\022EN_TYPE_TICKET_PRO\020\000\022\027\n\023EN_TYPE_FRIE" +
      "NDS_PRO\020\001\022\024\n\020EN_TYPE_GAME_PRO\020\002\022\030\n\024EN_TY" +
      "PE_LICKLOVE_PRO\020\003*O\n\014eUSERSEX_PRO\022\023\n\017EN_" +
      "USER_MEN_PRO\020\000\022\025\n\021EN_USER_WOMEN_PRO\020\001\022\023\n" +
      "\017EN_USER_MID_PRO\020\002*~\n\022e_ROOMRECVTYPE_PRO" +
      "\022\026\n\022EN_RECV_NURMAL_PRO\020\000\022\031\n\025EN_RECV_ONLY" +
      "COUNT_PRO\020\001\022\034\n\030EN_RECV_ONLYOPENROOM_PRO\020" +
      "\002\022\027\n\023EN_RECV_REJUEST_PRO\020\003*v\n\023e_RoomQuey" +
      "rCond_PRO\022\030\n\024EN_COND_BYUSERID_PRO\020\000\022\024\n\020E" +
      "N_COND_BYIP_PRO\020\001\022\025\n\021EN_COND_BYKEY_PRO\020\002",
      "\022\030\n\024EN_COND_BYROOMID_PRO\020\003*i\n\025e_RoomCard" +
      "ModCond_PRO\022\025\n\021EN_NICKMOD_NO_PRO\020\000\022\033\n\027EN" +
      "_NICKMOD_ONLYHOST_PRO\020\001\022\034\n\030EN_NIKCMOD_MA" +
      "NGALLOW_PRO\020\002*m\n\027e_IdentityCheckType_PRO" +
      "\022\032\n\026EN_IDENTITY_ENBALE_PRO\020\000\022\031\n\025EN_IDENT" +
      "ITY_CHECK_PRO\020\001\022\033\n\027EN_IDENTITY_DISABLE_P" +
      "RO\020\002*f\n\017e_VisitType_PRO\022\035\n\031EN_VISIT_CANN" +
      "OTTENTER_PRO\020\000\022\031\n\025EN_VISIT_CANENTER_PRO\020" +
      "\001\022\031\n\025EN_VISIT_CANSPEAK_PRO\020\002*a\n\021e_ChatMs" +
      "gType_PRO\022\027\n\023EN_CHATMSG_TEXT_PRO\020\000\022\030\n\024EN",
      "_CHATMSG_MAGIC_PRO\020\001\022\031\n\025EN_CHATMSG_NOTIF" +
      "Y_PRO\020\002*\255\001\n\023e_RoomLevelType_PRO\022\027\n\023En_Le" +
      "vel_Normal_PRO\020\000\022\027\n\023En_Level_Bronze_PRO\020" +
      "\001\022\027\n\023En_Level_Silver_PRO\020\002\022\025\n\021En_Level_G" +
      "old_PRO\020\003\022\032\n\026En_Level_WhiteGold_PRO\020\004\022\030\n" +
      "\024En_Level_diamond_PRO\020\005*p\n\022e_AgeRangeTyp" +
      "e_PRO\022\016\n\nEn_ALL_PRO\020\000\022\021\n\rEn_16TO22_PRO\020\001" +
      "\022\021\n\rEn_23TO30_PRO\020\002\022\021\n\rEn_31TO40_PRO\020\003\022\021" +
      "\n\rEn_OVER41_PRO\020\004*\252\001\n\re_UrlType_PRO\022\027\n\023E" +
      "N_URL_REGISTER_PRO\020\000\022\030\n\024EN_URL_FORGETPWD",
      "_PRO\020\001\022\032\n\026EN_URL_MODMOVIBILE_PRO\020\002\022\027\n\023EN" +
      "_URL_MODEMAIL_PRO\020\003\022\032\n\026EN_URL_MODUSERINF" +
      "O_PRO\020\004\022\025\n\021EN_URL_MODPWD_PRO\020\005*\346\016\n\017eOPER" +
      "RESULT_PRO\022\026\n\022E_OPER_SUCCESS_PRO\020\000\022\031\n\025E_" +
      "OPER_AUTHFAILER_PRO\020\001\022\031\n\025E_OPER_NOAUTHIN" +
      "FO_PRO\020\002\022\033\n\027E_OPER_USERORPASSWD_PRO\020\003\022\033\n" +
      "\027E_OPER_USERNOTEXIST_PRO\020\004\022\034\n\030E_OPER_REJ" +
      "EST_ADDREQ_PRO\020\005\022\031\n\025E_OPER_ERRORPARAM_PR" +
      "O\020\006\022\030\n\024E_OPER_LINKERROR_PRO\020\007\022\032\n\026E_OPER_" +
      "CGINOMEMORY_PRO\020\010\022\034\n\030E_OPER_DATABASEERRO",
      "R_PRO\020\t\022\035\n\031E_OPER_PLOICIENOEXIST_PRO\020\n\022 " +
      "\n\034E_OPER_EMPTY_PLOICIEINFO_PRO\020\013\022\035\n\031E_OP" +
      "ER_PLOICIENOERROR_PRO\020\014\022\032\n\026E_OPER_NOOFFL" +
      "INMSG_PRO\020\r\022\032\n\026E_OPER_SERVICEBUSY_PRO\020\016\022" +
      "\035\n\031E_OPER_ROOMNOTHERUSER_PRO\020\017\022\032\n\026E_OPER" +
      "_ROOMNOEXIST_PRO\020\020\022\037\n\033E_OPER_MODROOMALIA" +
      "SFAIL_PRO\020\021\022\035\n\031E_OPER_ROOMNOTMANAGER_PRO" +
      "\020\022\022!\n\035E_OPER_SETMANAGERONLYHOST_PRO\020\023\022!\n" +
      "\035E_OPER_ROOMHAVEMAXMANAGER_PRO\020\024\022\033\n\027E_OP" +
      "ER_ALREADYLOGIN_PRO\020\025\022\036\n\032E_OPER_SYS_CATC",
      "H_ERROR_PRO\020\026\022\034\n\030E_OPER_ERROR_DBADMIN_PR" +
      "O\020\027\022\037\n\033E_OPER_GETRESULT_ISNULL_PRO\020\030\022\034\n\030" +
      "E_OPER_OVERROOMCOUNT_PRO\020\031\022\027\n\023E_OPER_NOT" +
      "LOGIN_PRO\020\032\022\035\n\031E_OPER_OPERTERMINATED_PRO" +
      "\020\033\022\035\n\031E_OPER_CLIENTVERERROR_PRO\020\034\022\036\n\032E_O" +
      "PER_HOSTREJECTLEAVE_PRO\020\035\022\033\n\027E_OPER_ONLY" +
      "HOSTOPER_PRO\020\036\022\037\n\033E_OPER_DB_ALLOC_FAILUR" +
      "E_PRO\020(\022\036\n\032E_OPER_DB_DBCONN_ERROR_PRO\020)\022" +
      "\"\n\036E_OPER_DB_SQLCONTENT_ERROR_PRO\020*\022\037\n\033E" +
      "_OPER_DB_EXECSQL_ERROR_PRO\020+\022\035\n\031E_OPER_D",
      "B_SPROC_ERROR_PRO\020,\022 \n\034E_OPER_DB_EXECPOR" +
      "C_ERROR_PRO\020-\022\037\n\033E_OPER_DB_INVALID_PARAM" +
      "_PRO\020.\022#\n\037E_OPER_DB_FETCHRESULT_ERROR_PR" +
      "O\020/\022\036\n\032E_OPER_DB_USERORPASSWD_PRO\0202\022\036\n\032E" +
      "_OPER_DB_USERNO_ERROR_PRO\0203\022 \n\034E_OPER_DB" +
      "_ADMIN_NOTEXIST_PRO\0204\022\031\n\025E_OPER_DB_NOADM" +
      "IN_PRO\0205\022!\n\035E_OPER_DB_POLICIE_FAILURE_PR" +
      "O\0206\022 \n\034E_OPER_DB_EMAIL_NOTEXIST_PRO\0207\022\037\n" +
      "\033E_OPER_DB_KEYWORD_EXIST_PRO\0208\022\037\n\033E_OPER" +
      "_DB_LOAD_MODETYPE_PRO\0209\022\035\n\031E_OPER_DB_NOT",
      "_FRIENDS_PRO\020:\022\037\n\033E_OPER_DB_NOT_USERGROU" +
      "P_PRO\020;\022\036\n\032E_OPER_DB_MAX_ROOMMBMS_PRO\020<\022" +
      "\035\n\031E_OPER_DB_ACTIVE_TYPE_PRO\020=\022 \n\034E_OPER" +
      "_DB_ACCOUNT_ACTIVE_PRO\020>\022\036\n\032E_OPER_DB_MO" +
      "BILE_EXIST_PRO\020?\022\035\n\031E_OPER_DB_EMAIL_EXIS" +
      "T_PRO\020@\022\037\n\033E_OPER_DB_REGISTER_TYPE_PRO\020A" +
      "\022\037\n\033E_OPER_DB_EXIST_FRIENDS_PRO\020B\022\037\n\033E_O" +
      "PER_DB_USERID_ISUSED_PRO\020C\022\037\n\033E_OPER_DB_" +
      "GETWAY_ISUSED_PRO\020D\022\037\n\033E_OPER_DB_USER_HA" +
      "DROOMS_PRO\020E\022!\n\035E_OPER_DB_USERINFO_REJEC",
      "T_PRO\020F"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
